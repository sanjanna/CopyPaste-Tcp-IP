#include "inet.h"
#define BUFSIZE 1024

main()
{
    int sockfd,new_sockfd,clilen;
    char buffer[BUFSIZE+1];
    char revbuf[LENGTH];
    struct sockaddr_in serv_addr, cli_addr;

    if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0 )
    {
        perror("Server: socket() error\n");
        exit(1);
    }
    printf("\nEcho Application\n")

    //bzero( (char *) &serv_addr, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
    serv_addr.sin_port = htons(SERV_TCP_PORT);

    if(bind(sockfd,(struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
     {
         perror("Server: bind() error\n");
     }

    printf("\nWaiting for connection... [bind]\n");


    listen(sockfd,5);

    for(;;)
    {
        clilen = sizeof(cli_addr);
        new_sockfd=accept(sockfd,(struct sockaddr *)&cli_addr,&clilen);

        if(fork() == 0)
        {
            close(sockfd);

        if(new_sockfd > 0)
        printf("\nClient connected.\n");

        do
        {
        char* fr_name = "Home\\Desktop\\receive.txt";
        FILE *fr = fopen(fr_name, "a");
        if(fr == NULL)
            printf("File %s Cannot be opened file on server.\n", fr_name);
        else
        {
            bzero(revbuf, LENGTH);
            int fr_block_sz = 0;
            while((fr_block_sz = recv(new_sockfd, revbuf, LENGTH, 0)) > 0)
            {
                int write_sz = fwrite(revbuf, sizeof(char), fr_block_sz, fr);
                if(write_sz < fr_block_sz)
                {
                    error("File write failed on server.\n");
                }
                bzero(revbuf, LENGTH);
                if (fr_block_sz == 0 || fr_block_sz != 512)
                {
                    break;
                }
            }
            if(fr_block_sz < 0)
            {
                if (errno == EAGAIN)
                {
                    printf("recv() timed out.\n");
                }
                else
                {
                    fprintf(stderr, "recv() failed due to errno = %d\n", errno);
                    exit(1);
                }
            }
             recv(new_sockfd,buffer, BUFSIZE,0);
             printf("\nReceived message %s from Client\n", buffer);
             fclose(fr);
        }

        /* Call the Script */
        system("cd ; chmod +x script.sh ; ./script.sh");

        /* Send File to Client */

            char* fs_name = "Home\\Desktop\\output.txt";
            char sdbuf[LENGTH]; // Send buffer

            //send(new_sockfd, buffer, BUFSIZE, 0);
            printf("[Server] Sending %s to the Client...", buffer);

            FILE *fs = fopen(fs_name, "r");

            if(fs == NULL)
            {
                fprintf(stderr, "ERROR: File %s not found on server. (errno = %d)\n", fs_name, errno);
                exit(1);
            }

            bzero(sdbuf, LENGTH);
            int fs_block_sz;

            while((fs_block_sz = fread(sdbuf, sizeof(char), LENGTH, fs))>0)
            {
                if(send(new_sockfd, sdbuf, fs_block_sz, 0) < 0)
                {
                    fprintf(stderr, "ERROR: Failed to send file %s. (errno = %d)\n", fs_name, errno);
                    exit(1);
                }
                bzero(sdbuf, LENGTH);
            }
            send(new_sockfd, buffer, BUFSIZE, 0);
            printf("Ok sent to client!\n", fs_name);
            success = 1;
            //recv(new_sockfd,buffer, BUFSIZE,0);
            //printf("\nReceived message %s from Client\n", buffer);
            //printf("\nSending back message to Client\n");
            //send(new_sockfd, buffer, BUFSIZE, 0);
        }
        while (strcmp(buffer,"/q"));

        exit(0);
        }
        close(new_sockfd);
        printf("[Server] Connection with Client closed. Server will wait now...\n");
        while(waitpid(-1, NULL, WNOHANG) > 0);
}
        close(sockfd);
}
